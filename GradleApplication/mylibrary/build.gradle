apply plugin: 'com.android.library'
apply from: rootProject.file('module.gradle')

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
repositories {
    flatDir {
        dirs project(':mylibrary').file('libs')
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compile_basemodule(getProject())
    //    implementation project(':basemodule')
//    implementation(name: 'basemodule-debug', ext: 'aar')

//    implementation rootProject.ext.dependencies["appcompat-v7"]
//    implementation rootProject.ext.dependencies["constraint-layout"]
}

task clearJar(type: Delete) {
    delete 'build/libs/httputils.jar'
    delete 'libs/httputils.jar'
}
//
task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/classes.jar')
    into('/libs/')
//    include('classes.jar')
    rename('classes.jar', 'httputils.jar')
}
//makeJar.dependsOn(build) //必须写的配置

task mylibraryTask {
    println "mylibraryTask---------------------"
}
project.afterEvaluate {
    println "mylibrary---------------------project.afterEvaluate"
}